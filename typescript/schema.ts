/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/logical-things": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: operations["GetLogicalThings"];
    put?: never;
    post: operations["PostLogicalThings"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/logical-things/{primaryKey}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: operations["GetLogicalThing"];
    put: operations["PutLogicalThing"];
    post?: never;
    delete: operations["DeleteLogicalThing"];
    options?: never;
    head?: never;
    patch: operations["PatchLogicalThing"];
    trace?: never;
  };
  "/physical-things": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: operations["GetPhysicalThings"];
    put?: never;
    post: operations["PostPhysicalThings"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/physical-things/{primaryKey}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: operations["GetPhysicalThing"];
    put: operations["PutPhysicalThing"];
    post?: never;
    delete: operations["DeletePhysicalThing"];
    options?: never;
    head?: never;
    patch: operations["PatchPhysicalThing"];
    trace?: never;
  };
}
export type webhooks = Record<string, never>;
export interface components {
  schemas: {
    Any: Record<string, never>;
    LogicalThing: {
      /** Format: date-time */
      CreatedAt?: string;
      /** Format: date-time */
      DeletedAt?: string | null;
      ExternalID?: string | null;
      /** Format: uuid */
      ID?: string;
      Metadata?: {
        [key: string]: string | null;
      };
      Name?: string;
      /** Format: uuid */
      ParentLogicalThingID?: string | null;
      ParentLogicalThingIDObject?: components["schemas"]["NullableLogicalThing"];
      /** Format: uuid */
      ParentPhysicalThingID?: string | null;
      ParentPhysicalThingIDObject?: components["schemas"]["NullablePhysicalThing"];
      RawData?: Record<string, never>;
      Tags?: string[];
      Type?: string;
      /** Format: date-time */
      UpdatedAt?: string;
    };
    MapOfStringString: {
      [key: string]: string | null;
    };
    NullableAny: Record<string, never>;
    NullableLogicalThing: components["schemas"]["LogicalThing"];
    NullablePhysicalThing: components["schemas"]["PhysicalThing"];
    PhysicalThing: {
      /** Format: date-time */
      CreatedAt?: string;
      /** Format: date-time */
      DeletedAt?: string | null;
      ExternalID?: string | null;
      /** Format: uuid */
      ID?: string;
      Metadata?: {
        [key: string]: string | null;
      };
      Name?: string;
      RawData?: Record<string, never>;
      Tags?: string[];
      Type?: string;
      /** Format: date-time */
      UpdatedAt?: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
  GetLogicalThings: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful List Fetch for LogicalThings */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": {
            error?: string;
            objects?: components["schemas"]["LogicalThing"][];
            /** Format: int32 */
            status: number;
            success: boolean;
          };
        };
      };
      /** @description Failed List Fetch for LogicalThings */
      default: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": {
            error?: string;
            /** Format: int32 */
            status: number;
            success: boolean;
          };
        };
      };
    };
  };
  PostLogicalThings: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["LogicalThing"][];
      };
    };
    responses: {
      /** @description Successful List Create for LogicalThings */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": {
            error?: string;
            objects?: components["schemas"]["LogicalThing"][];
            /** Format: int32 */
            status: number;
            success: boolean;
          };
        };
      };
      /** @description Failed List Create for LogicalThings */
      default: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": {
            error?: string;
            /** Format: int32 */
            status: number;
            success: boolean;
          };
        };
      };
    };
  };
  GetLogicalThing: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        primaryKey: unknown;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Item Fetch for LogicalThings */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": {
            error?: string;
            objects?: components["schemas"]["LogicalThing"][];
            /** Format: int32 */
            status: number;
            success: boolean;
          };
        };
      };
      /** @description Failed Item Fetch for LogicalThings */
      default: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": {
            error?: string;
            /** Format: int32 */
            status: number;
            success: boolean;
          };
        };
      };
    };
  };
  PutLogicalThing: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        primaryKey: unknown;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["LogicalThing"];
      };
    };
    responses: {
      /** @description Successful Item Replace for LogicalThings */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": {
            error?: string;
            objects?: components["schemas"]["LogicalThing"][];
            /** Format: int32 */
            status: number;
            success: boolean;
          };
        };
      };
      /** @description Failed Item Replace for LogicalThings */
      default: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": {
            error?: string;
            /** Format: int32 */
            status: number;
            success: boolean;
          };
        };
      };
    };
  };
  DeleteLogicalThing: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        primaryKey: unknown;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Item Delete for LogicalThings */
      204: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description Failed Item Delete for LogicalThings */
      default: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": {
            error?: string;
            /** Format: int32 */
            status: number;
            success: boolean;
          };
        };
      };
    };
  };
  PatchLogicalThing: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        primaryKey: unknown;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["LogicalThing"];
      };
    };
    responses: {
      /** @description Successful Item Update for LogicalThings */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": {
            error?: string;
            objects?: components["schemas"]["LogicalThing"][];
            /** Format: int32 */
            status: number;
            success: boolean;
          };
        };
      };
      /** @description Failed Item Update for LogicalThings */
      default: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": {
            error?: string;
            /** Format: int32 */
            status: number;
            success: boolean;
          };
        };
      };
    };
  };
  GetPhysicalThings: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful List Fetch for PhysicalThings */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": {
            error?: string;
            objects?: components["schemas"]["PhysicalThing"][];
            /** Format: int32 */
            status: number;
            success: boolean;
          };
        };
      };
      /** @description Failed List Fetch for PhysicalThings */
      default: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": {
            error?: string;
            /** Format: int32 */
            status: number;
            success: boolean;
          };
        };
      };
    };
  };
  PostPhysicalThings: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["PhysicalThing"][];
      };
    };
    responses: {
      /** @description Successful List Create for PhysicalThings */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": {
            error?: string;
            objects?: components["schemas"]["PhysicalThing"][];
            /** Format: int32 */
            status: number;
            success: boolean;
          };
        };
      };
      /** @description Failed List Create for PhysicalThings */
      default: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": {
            error?: string;
            /** Format: int32 */
            status: number;
            success: boolean;
          };
        };
      };
    };
  };
  GetPhysicalThing: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        primaryKey: unknown;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Item Fetch for PhysicalThings */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": {
            error?: string;
            objects?: components["schemas"]["PhysicalThing"][];
            /** Format: int32 */
            status: number;
            success: boolean;
          };
        };
      };
      /** @description Failed Item Fetch for PhysicalThings */
      default: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": {
            error?: string;
            /** Format: int32 */
            status: number;
            success: boolean;
          };
        };
      };
    };
  };
  PutPhysicalThing: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        primaryKey: unknown;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["PhysicalThing"];
      };
    };
    responses: {
      /** @description Successful Item Replace for PhysicalThings */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": {
            error?: string;
            objects?: components["schemas"]["PhysicalThing"][];
            /** Format: int32 */
            status: number;
            success: boolean;
          };
        };
      };
      /** @description Failed Item Replace for PhysicalThings */
      default: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": {
            error?: string;
            /** Format: int32 */
            status: number;
            success: boolean;
          };
        };
      };
    };
  };
  DeletePhysicalThing: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        primaryKey: unknown;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Item Delete for PhysicalThings */
      204: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description Failed Item Delete for PhysicalThings */
      default: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": {
            error?: string;
            /** Format: int32 */
            status: number;
            success: boolean;
          };
        };
      };
    };
  };
  PatchPhysicalThing: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        primaryKey: unknown;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["PhysicalThing"];
      };
    };
    responses: {
      /** @description Successful Item Update for PhysicalThings */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": {
            error?: string;
            objects?: components["schemas"]["PhysicalThing"][];
            /** Format: int32 */
            status: number;
            success: boolean;
          };
        };
      };
      /** @description Failed Item Update for PhysicalThings */
      default: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": {
            error?: string;
            /** Format: int32 */
            status: number;
            success: boolean;
          };
        };
      };
    };
  };
}
